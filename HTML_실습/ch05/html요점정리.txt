<!DOCTYPE html> -> Document type html
<html lang="en">
<head>
  <meta charset="UTF-8"> -> 글자 깨지면 이쪽 체크, 보통은 UTF-8로 고정 
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> -> 모든 장치에서 웹사이트가 잘 보이도록 뷰포트(viewport)를 설정
  <title>Document</title>
</head>
<body>
  
</body>
</html>


------------------------------------------------------------------------------------------


&nbsp; >> non-breaking, no break
&copy; >> 저작권 표시
종료태그가 없는 태그 : br, img, hr, meta, input
종료태그가 없음에도 /가 있는 경우는 Xhtml에 사용되었던 코드이며
htmll5에서는 xhtml도 지원된다
property="og:title(제목), url(실제 사이트 주소),img(이미지), description(설명글)" > 사이트의 설명을 보여주는 태그 , 다만 트위터는 따로 지원하지 않아서 따로 빼주어야 한다.
  
<명령어 속성 = "속성값">
<tag property = "value">



* 주요태그 *
 
01)head 태그 내에 작성

1. meta - 문서의 속성 정리
2. title -  문서의 제목 지정

------------------------------------------------------------------------------------------

* 웹 페이지 개발 방법 *

- 구분해서 작성 -
1. 구조(strcuture) - html
2. 표현(presention) - css
3. 동작(behavior) - JAVASCRIPT


* 레이아웃 기본 구조 *
1. header
 - 상단 로고, GNB, topmenu 등
 - 주로 페이지 안내(이동)에 관한 요소 포함
 - GNB : Global Navigation Bar - 메뉴 바

 2. content(main) - section / aside / article
 - 페이지별 내용, LNB, 배너, 게시판, 퀵메뉴 등
 - 해당 페이지에서 나타내고자 하는 내용 작성
 - LNB : local Navigation Bar - 사이드 메뉴
   메인메뉴(대메뉴)에 포함된 하위메뉴(소메뉴)의 집합

3. footer
 - 회사나 사이트에 대한 정보
 - 각종 연락처, 관리자 정보, 약관 및 정책, 카피라이트 등

4. 기타요소(sns, 검색, 관련 사이트 등)는 필요한 위치에 추가

------------------------------------------------------------------------------------------

*시멘틱 태그*

- header : 사이트의 헤드영역, 주로 머릿말 제목을 표현하기 위해 사용하는 태그
- nav :  네비게이션이라 불리며 문서를 사이트간에 서로 연결하는 링크 역활, 메뉴에 사용되고 어디든지 사용가능
- section : header, section, footer의 3가지 공간에 본문콘텐츠를 담을 수 있는 영역
- article : section이 컨텐츠를 분류하면 article은 실질적인 내용이 들어간다.
- aside : 사이드 바로 표현하며, 본문 이외의 내용을 담고 있는 시멘틱 태그이다.
- footer : 화면의 제일 아래 구조로 회사,저작권, 약관, 제작 정보등이 들어간다.
- main

------------------------------------------------------------------------------------------

*form*

1) 모든 양식은 <form>~</form> 안에서 작성

- <form action="데이터를 처리할 페이지 경로" name="구분할 수 있는 요소(선택적속성)" method="데이터 전송방식">

- method -
  get = 저장, 보안성이 좋지 않지만 빠르다
  post = 송신, 보안성이 좋지만 느리다, 암호화 한 뒤 전송, 그리고 복호(암호풀어내기)

2) 모든 양식은 이름(name AND id)입력
3) 대부분의 양식은 <input>태그의 "type" 속성으로 정의 <input type="종류선언">
4) <select>, <textarea>, <button>은 독립태그, 위 세개를 제외한 나머지 모양들은 <input> 혼자 만든다.

<select> : 항목을 선택할 수 있는 칸 내용을 구성할 때는 <select>안에 <option>태그를 넣어준다
ex) <select> 
      <option>~</option>
      <option>~</option>
    </select>

<textarea> : 여러줄의 내용을 쓸 수 있는 칸


<textarea rows="" cols="></textarea>
<button type="">text</button> 

  input, result : front 영역(html,css,js)
  process, db : back 영역 (asp, php, jsp, sql)

프론트엔드개발 : 프론트엔드 언어를 이용해 백앤드 개발을 병행할 수 있는 개발

  <input type = "속성">

  - type 속성 -

  1) text : text 입력, 한 줄의 입력 필드를 생성한다.
  2) password : 말 그대로 비밀번호, 문자를 입력했을 시 별표나 동그라미 표시로 가려진다.
  3) checkbox : 제한된 선택자들 중에서 임의의 갯수를 선택할 수 있게 해준다.(복수선택가능)
  4) radio : 라디오 버튼을 정의, 사용자가 제한된 개수의 선택자중 한가지만 선택할 수 있다.(복수선택불가능)
  5) image : 제출 버튼으로 사용될 이미지를 정의하는 속성.
  6) file : 업로드하고 싶은
  7) hidden
  8) button : 버튼을 만들어주는 태그. input 타입으로도 사용할 수 있지만 <button>태그가 따로 있어 이쪽을 주로 사용한다.
  9) submit : 폼을 제출하는 버튼을 정의 action에 적힌 서버페이지에 젳ㄹ한다.
  10) reset : 작성된 폼을 리셋하는 속성

  
  
  
  - html5에서 추가된 type 속성 -

  1) datetime : 날짜와 시간(시간대)을 선택할 수 있게 해주는 셀
  2) datetime-local : 날짜와 시간을(시간대 없이)선택할 수 있는 셀
  3) week : 날짜(주, 연도)를 선택할 수 있게 해주는 셀
  4) month : 월, 연도를 선택할 수 있는 셀
  5) date : 날짜를 포함해야 하는 입력 셀
  6) time : 시간을 선택할 수 있게 하는 셀
  7) email : email주소를 포함해야하는 셀에 사용된다.
  8) url : url 주소를 입력하는 셀
  9) search : 검색 셀에 사용되는 속성(검색 셀은 일반 텍스트 셀처럼 동작된다.)
  10) number : 숫자 값을 지정하는 속성, 숫자의 한계를 설정할 수 있다.
  11) range : 범위 안에 있ㅇ야 하는 입력셀을 생성하며 최소,최대값을 설정할 수 있다.(슬라이드컨트롤)
  12) tel : 전화번호를 포함해야 하는 입력 셀
  13) color : 색상을 포함해야하는 입력 셀을 지정할때 사용한다.

  
  
  
  - html5에서 추가된 attribute 속성 -

  1) placeholder : 셀 안에 어떤 내용을 입력해야 하는지 안내하는 attribute
  2) autofocus : 사이트를 시작할 때 처음으로 띄워주는 셀
  3) required : form데이터가 서버로 제출 되기전 반드시 채워져 있어야 하는 입력필드를 명시한다.

  *관련 태그(속성)*
  1) fieldset : 양식의 소그룹
    - 디자인 때문에 묶어줄 경우에는 <div>를 사용
    - 의미나 목적으로 묶어줄 경우는 <fieldset> 사용 / 왜 분리한건지 설명이 필요하다
   
  2) legend : fieldset의 제목
    - form태그를 사용할때 fieldst과 legend 하나는 꼭 사용할 것

  3) label : 필드와 텍스트의 그룹
    - 철자는"라벨"이지만 "레이블"이라고 읽는다.
    - input태그에 이름을 붙여주는 것
    - 사용자 입력란에는 적절한 라벨링을 붙여준다.

  4)  for(속성) : 연결하고자 하는 필드의 id 값 작성
    
    ex)<label for="id">텍스트<label>
        <input type="속성" name="이름" id="id">
    
    - 라벨지는 꼭 1개만 사용한다

    와우~ 전체적으로 잘 했네요~~ 그냥 이대로 진행하면 될 거 같아요 다만 오시는 길 페이지에서 제목과 내용 콘텐트 사이 간격이 조금 멀어요~ 그것만 수정하면 될 거 같네요 ^^b
